steps:

  - bash: |
      ls
      cp *.dll $BUILD_BINARIESDIRECTORY
      ./gradlew.bat assemble
      cp ./build/tiledb_jni/Release/*.dll ./build/install/bin/*.dll $BUILD_BINARIESDIRECTORY

    displayName: 'Build and Upload (Windows)'

  - bash: |
      set -e pipefail
      # Display log files if the build failed
      echo "Dumping log files for failed build"
      echo "----------------------------------"
      for f in $(find $BUILD_REPOSITORY_LOCALPATH -name *.log);
        do echo "------"
           echo $f
           echo "======"
           cat $f
        done;
    condition: failed() # only run this job if the build step failed
    displayName: "Print log files (failed build only)"


  - bash: |
      echo $sourceVersion
      commitHash=${sourceVersion:0:7}
      echo $commitHash
      echo "##vso[task.setvariable variable=commitHash]$commitHash" ## Set variable for using in other tasks.
    env: { sourceVersion: $(Build.SourceVersion) }
    displayName: Git Hash 7-digit

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: false
      archiveType: 'tar' # Options: zip, 7z, tar, wim
      tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: $(Build.ArtifactStagingDirectory)/tiledb-$(Agent.OS)-$(Build.SourceBranchName)-$(commitHash).tar.gz
      replaceExistingArchive: true
      verbose: true # Optional
    condition: succeeded()

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/tiledb-$(Agent.OS)-$(Build.SourceBranchName)-$(commitHash).tar.gz
      artifactName: libraries
    condition: succeeded()