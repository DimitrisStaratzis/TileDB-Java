/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.tiledb.libtiledb;

public class doubleArray {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;
  private final int nelements;

  protected doubleArray(long cPtr, boolean cMemoryOwn, int nelements) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
    this.nelements = nelements;
  }

  protected static long getCPtr(doubleArray obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        tiledbJNI.delete_doubleArray(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public doubleArray(int nelements) {
    this(tiledbJNI.new_doubleArray(nelements), true, nelements);
  }

  public double getitem(int index) {
    if (index >= nelements || index < 0) {
      throw new ArrayIndexOutOfBoundsException(index);
    }
    return tiledbJNI.doubleArray_getitem(swigCPtr, this, index);
  }

  public void setitem(int index, double value) {
    if (index >= nelements || index < 0) {
      throw new ArrayIndexOutOfBoundsException(index);
    }
    tiledbJNI.doubleArray_setitem(swigCPtr, this, index, value);
  }

  public SWIGTYPE_p_double cast() {
    long cPtr = tiledbJNI.doubleArray_cast(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  protected int size() {
    return nelements;
  }
}
